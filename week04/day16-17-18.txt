### PHP 面向对象 OOP ###
1. 声明类、继承、封装、魔术方法
namespace  namespace_name;
class ClassName extends BaseClassName
{
   //属性
   [modifiers] $propertyName = initValue;

   //伪变量 $this 代表当前类的对象

   //构造方法
   [modifiers] function __construct()
   {

   }

   //析构方法
   [modifiers] function __destruct()
   {

   }
   //
   __set($key,$value)
   {
      $this->key = $value;
   }
   //
   __get($name)
   {
      return $this->name;
   }
   //方法
   [modifiers] function functionName()
   {
      
   }
}

$obj = new ClassName();
obj -> $propertyName;
obj -> functionName();

2. 面向对象的三个特性 
   继承、 封装、 多态

   子类继承父类，可以使用父类的属性和方法，私有属性和方法不能被继承
   子类会覆盖父类的属性和方法，但是子类的属性和方法权限不能比父类属性小，权限只能扩大不能缩小

   子类构造方法里面调用父类的构造方法，正确给父类属性赋值
   parent::__construct(); 

   好处：
      a. 代码重用性
      b. 可拓展性
      c. 可维护性


3. final 最终的 最后的 可以修饰方法和属性
   final不能修饰属性
   final类---不可被继承。
   final方法---不可被覆盖。

4. static 
   类名::$name/类名::name()
   self::$name/self::name()  //self 代表当前类

5. 设计模式、MVC设计模式
   a.单例设计模式


6. 完成对数据库操作的封装，详细见代码

